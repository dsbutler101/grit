.e2e:base:
  stage: e2e
  extends:
    - .rules:merge_request_pipelines:e2e
  variables:
    # Used to tag created runners, name resources and state
    # E2E_TEST_NAME is set in each e2e test scenario
    # `tags` has limited variables but CI_PIPELINE_IID works
    RUNNER_NAME: &runner_name "u${CI_PIPELINE_IID}-${E2E_TEST_NAME}"
    JOB_NAME: ${RUNNER_NAME}

.e2e:terraform:base:
  extends:
    - .e2e:base
    - .go-cache
  variables:
    # common E2E tf vars
    TF_VAR_runner_tag: ${RUNNER_NAME}
    TF_VAR_name: ${RUNNER_NAME}
    TF_VAR_gitlab_project_id: ${CI_PROJECT_ID}

    # Terraform backend config
    TF_HTTP_ADDRESS: "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/terraform/state/${RUNNER_NAME}"
    TF_HTTP_LOCK_ADDRESS: ${TF_HTTP_ADDRESS}/lock
    TF_HTTP_UNLOCK_ADDRESS: ${TF_HTTP_ADDRESS}/lock
    TF_HTTP_USERNAME: ${GITLAB_USER_LOGIN}
    TF_HTTP_PASSWORD: ${GITLAB_TOKEN_TERRAFORM}
    TF_HTTP_LOCK_METHOD: POST
    TF_HTTP_UNLOCK_METHOD: DELETE

    FF_TIMESTAMPS: true

  before_script:
    # TODO: replace GITLAB_TOKEN in CI/CD settings once
    # all the E2E tests are migrated to inline jobs
    - export GITLAB_TOKEN="${GITLAB_TOKEN_E2E}"

.e2e:gcloud:init:
  variables:
    GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_CREDENTIALS_B64}.decoded
  before_script:
    - export GITLAB_TOKEN="${GITLAB_TOKEN_E2E}"
    - cat "${GOOGLE_CREDENTIALS_B64}" | base64 -d > "${GOOGLE_APPLICATION_CREDENTIALS}"

.e2e:terraform:apply: &e2e_terraform_apply
  - mage terraform:initAndApply "${E2E_DIR}" "${CI_JOB_TIMEOUT}s"

.e2e:terraform:destroy: &e2e_terraform_destroy
  - mage terraform:initAndDestroy "${E2E_DIR}" "${CI_JOB_TIMEOUT}s"

.e2e:dev:aws:variables:
  variables:
    E2E_TEST_NAME: aws
    E2E_DIR: e2e/aws

e2e:dev:aws:apply:
  timeout: 30m
  extends:
    - .e2e:terraform:base
    - .e2e:dev:aws:variables
  script:
    - *e2e_terraform_apply
    - mage runner:waitForRunners "${RUNNER_NAME}" 20

e2e:dev:aws:test:
  timeout: 10m
  image: alpine:latest
  needs:
    - e2e:dev:aws:apply
  extends:
    - .e2e:base
    - .e2e:dev:aws:variables
  script:
    - echo "Runner name ${RUNNER_NAME}"
    - apk add curl
    - curl http://169.254.169.254/latest/meta-data/instance-id
  tags:
    - *runner_name

e2e:dev:aws:destroy:
  timeout: 30m
  needs:
    - job: e2e:dev:aws:test
  when: always
  extends:
    - .e2e:terraform:base
    - .e2e:dev:aws:variables
  script:
    - *e2e_terraform_destroy

.e2e:dev:google:variables:
  variables:
    E2E_TEST_NAME: google
    E2E_DIR: e2e/google

e2e:dev:google:apply:
  timeout: 30m
  extends:
    - .e2e:terraform:base
    - .e2e:gcloud:init
    - .e2e:dev:google:variables
  script:
    - *e2e_terraform_apply
    - mage runner:waitForRunners "${RUNNER_NAME}" 20

e2e:dev:google:test:
  timeout: 10m
  image: alpine:latest
  needs:
    - job: e2e:dev:google:apply
  extends:
    - .e2e:base
    - .e2e:dev:google:variables
  script:
    - echo "Runner name ${RUNNER_NAME}"
    - apk add curl
    - 'curl -s -H "Metadata-Flavor: Google" http://169.254.169.254/computeMetadata/v1/instance/name'
  tags:
    - *runner_name

e2e:dev:google:destroy:
  timeout: 30m
  needs:
    - job: e2e:dev:google:test
  when: always
  extends:
    - .e2e:terraform:base
    - .e2e:gcloud:init
    - .e2e:dev:google:variables
  script:
    - *e2e_terraform_destroy

.e2e:dev:gke:windows:variables:
  variables:
    E2E_TEST_NAME: gke-win
    E2E_DIR: e2e/google/gke-windows

e2e:dev:gke:windows:apply:
  timeout: 60m
  extends:
    - .e2e:terraform:base
    - .e2e:gcloud:init
    - .e2e:dev:gke:windows:variables
  script:
    - *e2e_terraform_apply
    - mage runner:waitForRunners "${RUNNER_NAME}" 20

e2e:dev:gke:windows:test:
  timeout: 90m
  image: mcr.microsoft.com/powershell:lts-windowsservercore-1809
  needs:
    - e2e:dev:gke:windows:apply
  extends:
    - .e2e:base
    - .e2e:dev:gke:windows:variables
  script:
    - echo "Runner name ${RUNNER_NAME}"
    - $metadata = (Invoke-WebRequest -Uri "http://169.254.169.254/computeMetadata/v1/instance/name" -Headers @{"Metadata-Flavor"="Google"} -UseBasicParsing).Content
    - $metadataString = [System.Text.Encoding]::UTF8.GetString($metadata)
    - $metadataString
  tags:
    - *runner_name

e2e:dev:gke:windows:destroy:
  timeout: 30m
  needs:
    - job: e2e:dev:gke:windows:test
  when: always
  extends:
    - .e2e:terraform:base
    - .e2e:gcloud:init
    - .e2e:dev:gke:windows:variables
  script:
    - *e2e_terraform_destroy
