default:
  image: ${CI_IMAGE}
  tags:
    - gitlab-org

variables:
  GO_VERSION: "go1.22.5"
  DOCKER_VERSION: "24.0.9"

  PROVIDER: aws
  OS: linux
  ARCH: amd64
  JOB_NAME: "u-${CI_COMMIT_SHORT_SHA}-${PROVIDER}"

  # Terraform backend config
  TF_HTTP_ADDRESS: "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/terraform/state/${JOB_NAME}"
  TF_HTTP_LOCK_ADDRESS: ${TF_HTTP_ADDRESS}/lock
  TF_HTTP_UNLOCK_ADDRESS: ${TF_HTTP_ADDRESS}/lock
  TF_HTTP_USERNAME: ${GITLAB_USER_LOGIN}
  TF_HTTP_PASSWORD: ${GITLAB_TOKEN_TERRAFORM}
  TF_HTTP_LOCK_METHOD: POST
  TF_HTTP_UNLOCK_METHOD: DELETE

.no_cache:
  cache: {}

.no_dependencies:
  dependencies: []

.no_cache_and_dependencies:
  extends:
    - .no_cache
    - .no_dependencies

.go-cache:
  variables:
    # build cache on non-main branches
    GOCACHE: $CI_PROJECT_DIR/.gocache-$CI_COMMIT_REF_PROTECTED
    # go module cache is based on go.sum as a cache key
    GOMODCACHE: $CI_PROJECT_DIR/.gomodcache
  before_script:
    - mkdir -p "$GOCACHE"
  cache:
    - key: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"
      paths:
        - .gocache-false/
    - key:
        prefix: gomod
        files:
          - go.mod
          - go.sum
      paths:
        - $GOMODCACHE

.docker_in_docker:
  image: docker:${DOCKER_VERSION}-git
  services:
    - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_HOST: tcp://docker:2376/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
  tags:
    - gitlab-org-docker

.e2e:prod:terraform:apply:
  script:
    - mage terraform:terraformInitAndApply

.e2e:prod:terraform:destroy:
  script:
    - mage terraform:terraformInitAndDestroy
