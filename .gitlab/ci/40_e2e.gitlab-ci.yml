e2e:prod:aws:
  stage: e2e
  needs: []
  extends:
    - .rules:merge_request_pipelines:e2e
    - .go-cache
  resource_group: e2e-prod
  script:
    - go test ./e2e/aws -tags e2e -timeout 30m

e2e:prod:google:
  stage: e2e
  needs: []
  extends:
    - .rules:merge_request_pipelines:e2e
    - .go-cache
  resource_group: e2e-prod
  variables:
    GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_CREDENTIALS_B64}.decoded
  script:
    - cat "${GOOGLE_CREDENTIALS_B64}" | base64 -d > "${GOOGLE_APPLICATION_CREDENTIALS}"
    - go test ./e2e/google -tags e2e -timeout 1h

.e2e:dev:gke:windows:variables:
  variables:
    PROVIDER: google
    E2E_DIR: e2e/google/gke-windows
    RUNNER_TAGS: job-${PROVIDER}-${CI_PIPELINE_IID},e2e-gke-windows
    FF_TIMESTAMPS: true

e2e:dev:gke:windows:apply:
  stage: e2e
  timeout: 60m
  needs:
    - job: "build CI image"
      optional: true
  extends:
    - .rules:merge_request_pipelines:e2e
    - .go-cache
    - .e2e:gcloud:init
    - .e2e:terraform:apply
    - .e2e:dev:gke:windows:variables

e2e:dev:gke:windows:test:
  stage: e2e
  timeout: 90m
  image: mcr.microsoft.com/powershell:lts-windowsservercore-1809
  needs:
    - e2e:dev:gke:windows:apply
  extends:
    - .rules:merge_request_pipelines:e2e
    - .e2e:dev:gke:windows:variables
  script:
    - echo "Runner tags ${RUNNER_TAGS}"
    - $metadata = (Invoke-WebRequest -Uri "http://169.254.169.254/computeMetadata/v1/instance/name" -Headers @{"Metadata-Flavor"="Google"} -UseBasicParsing).Content
    - $metadataString = [System.Text.Encoding]::UTF8.GetString($metadata)
    - $metadataString
  tags:
    - job-${PROVIDER}-${CI_PIPELINE_IID}
    - e2e-gke-windows

e2e:dev:gke:windows:destroy:
  stage: e2e
  timeout: 30m
  needs:
    - job: e2e:dev:gke:windows:test
  when: always
  extends:
    - .rules:merge_request_pipelines:e2e
    - .go-cache
    - .e2e:gcloud:init
    - .e2e:terraform:destroy
    - .e2e:dev:gke:windows:variables
